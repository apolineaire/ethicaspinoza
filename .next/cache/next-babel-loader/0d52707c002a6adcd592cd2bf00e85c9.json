{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/pedenys/Sandbox/ethicaspinoza/src/pages/parsii.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport json from \"../../source/FR/appuhn/parsv.json\";\nimport Axioma from \"../components/text/Axioma\";\nimport Praefatio from \"../components/text/Praefatio\";\nimport Propositio from \"../components/text/Propositio\";\n\nvar ParsV = function ParsV() {\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Partie V\"), __jsx(Praefatio, {\n    pars: \"5\",\n    txt: json.praefatio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), Array.from({\n    length: 2\n  }, function (_, i) {\n    return __jsx(Axioma, {\n      index: i + 1,\n      pars: \"5\",\n      txt: json.axioma[i + 1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    });\n  }), Array.from({\n    length: 42\n  }, function (_, i) {\n    return __jsx(\"div\", {\n      className: \"propositioContainer\",\n      key: i.toString() + json.propositio[i + 1][0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, __jsx(Propositio, {\n      index: i + 1,\n      pars: \"3\",\n      txt: json.propositio[i + 1],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }));\n  }));\n};\n\n_c = ParsV;\nexport default ParsV;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParsV\");","map":{"version":3,"sources":["/Users/pedenys/Sandbox/ethicaspinoza/src/pages/parsii.tsx"],"names":["React","json","Axioma","Praefatio","Propositio","ParsV","praefatio","Array","from","length","_","i","axioma","toString","propositio"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,GAAM;AAC5B,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE,MAAC,SAAD;AAAW,IAAA,IAAI,EAAC,GAAhB;AAAoB,IAAA,GAAG,EAAEJ,IAAI,CAACK,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAOGC,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAX,EAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,WACzB,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAEA,CAAC,GAAG,CAAnB;AAAsB,MAAA,IAAI,EAAC,GAA3B;AAA+B,MAAA,GAAG,EAAEV,IAAI,CAACW,MAAL,CAAYD,CAAC,GAAG,CAAhB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADyB;AAAA,GAA1B,CAPH,EAYGJ,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAX,EAA2B,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAC1B;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,GAAG,EAAEA,CAAC,CAACE,QAAF,KAAeZ,IAAI,CAACa,UAAL,CAAgBH,CAAC,GAAG,CAApB,EAAuB,CAAvB,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,MAAC,UAAD;AAAY,MAAA,KAAK,EAAEA,CAAC,GAAG,CAAvB;AAA0B,MAAA,IAAI,EAAE,GAAhC;AAAqC,MAAA,GAAG,EAAEV,IAAI,CAACa,UAAL,CAAgBH,CAAC,GAAG,CAApB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CAD0B;AAAA,GAA3B,CAZH,CADF;AA2BD,CA5BD;;KAAMN,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React from \"react\"\nimport json from \"../../source/FR/appuhn/parsv.json\"\nimport Axioma from \"../components/text/Axioma\"\nimport Praefatio from \"../components/text/Praefatio\"\nimport Propositio from \"../components/text/Propositio\"\n\nconst ParsV: React.FC = () => {\n  return (\n    <>\n      <h1>Partie V</h1>\n\n      {/* Praefatio */}\n      <Praefatio pars=\"5\" txt={json.praefatio} />\n\n      {/* Axioma */}\n      {Array.from({ length: 2 }, (_, i) => (\n        <Axioma index={i + 1} pars=\"5\" txt={json.axioma[i + 1]} />\n      ))}\n\n      {/* Propositio */}\n      {Array.from({ length: 42 }, (_, i) => (\n        <div\n          className=\"propositioContainer\"\n          key={i.toString() + json.propositio[i + 1][0]}\n        >\n          <Propositio index={i + 1} pars={\"3\"} txt={json.propositio[i + 1]} />\n          {/* \n            getDemonstratioArray(json.demonstratio, i + 1).map((txt, index) => (\n              <Demonstratio txt={txt} key={txt[0] + index.toString()} />\n            ))} */}\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default ParsV\n"]},"metadata":{},"sourceType":"module"}