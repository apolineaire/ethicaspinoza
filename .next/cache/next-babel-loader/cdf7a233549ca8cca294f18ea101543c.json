{"ast":null,"code":"var _jsxFileName = \"/Users/pedenys/Sandbox/ethicaspinoza/src/components/text/Appendix.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Caput from \"@atoms/Caput\";\nimport { useContext } from \"react\";\nimport VisibilityContext from \"../../context/VisibilityContext\";\n\nconst Appendix = ({\n  caputs,\n  pars,\n  txt\n}) => {\n  const {\n    showAppendix\n  } = useContext(VisibilityContext);\n  return showAppendix && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Appendice\"), __jsx(\"p\", {\n    id: `pars${pars}-appendix`,\n    dangerouslySetInnerHTML: {\n      __html: txt\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), caputs && caputs.map(caput => __jsx(Caput, {\n    index: Number(caput.caputIndex),\n    pars: pars,\n    txt: caput.txt,\n    key: caput.txt[0] + caput.caputIndex.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Appendix;","map":{"version":3,"sources":["/Users/pedenys/Sandbox/ethicaspinoza/src/components/text/Appendix.tsx"],"names":["Caput","useContext","VisibilityContext","Appendix","caputs","pars","txt","showAppendix","__html","map","caput","Number","caputIndex","toString"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkC,cAAlC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;;AAQA,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAD,KAA2B;AACnE,QAAM;AAAEC,IAAAA;AAAF,MAAmBN,UAAU,CAACC,iBAAD,CAAnC;AACA,SACEK,YAAY,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AACE,IAAA,EAAE,EAAG,OAAMF,IAAK,WADlB;AAEE,IAAA,uBAAuB,EAAE;AAAEG,MAAAA,MAAM,EAAEF;AAAV,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAMGF,MAAM,IACLA,MAAM,CAACK,GAAP,CAAYC,KAAD,IACT,MAAC,KAAD;AACE,IAAA,KAAK,EAAEC,MAAM,CAACD,KAAK,CAACE,UAAP,CADf;AAEE,IAAA,IAAI,EAAEP,IAFR;AAGE,IAAA,GAAG,EAAEK,KAAK,CAACJ,GAHb;AAIE,IAAA,GAAG,EAAEI,KAAK,CAACJ,GAAN,CAAU,CAAV,IAAeI,KAAK,CAACE,UAAN,CAAiBC,QAAjB,EAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPJ,CAFJ;AAoBD,CAtBD;;AAwBA,eAAeV,QAAf","sourcesContent":["import Caput, { CaputProps } from \"@atoms/Caput\"\nimport { useContext } from \"react\"\nimport VisibilityContext from \"../../context/VisibilityContext\"\n\ninterface AppendixProps {\n  caputs?: Array<CaputInterface>\n  pars: string\n  txt: string\n}\n\nconst Appendix: React.FC<AppendixProps> = ({ caputs, pars, txt }) => {\n  const { showAppendix } = useContext(VisibilityContext)\n  return (\n    showAppendix && (\n      <div>\n        <h2>Appendice</h2>\n        <p\n          id={`pars${pars}-appendix`}\n          dangerouslySetInnerHTML={{ __html: txt }}\n        />\n        {caputs &&\n          caputs.map((caput) => (\n            <Caput\n              index={Number(caput.caputIndex)}\n              pars={pars}\n              txt={caput.txt}\n              key={caput.txt[0] + caput.caputIndex.toString()}\n            />\n          ))}\n      </div>\n    )\n  )\n}\n\nexport default Appendix\n"]},"metadata":{},"sourceType":"module"}